
//Heap Sort

//Wikey
/* 调整成最大堆 */
void max_heapify(int arr[], int start, int end)
{
	int dad = start;
	int son = 2 * dad + 1;
	while (son<=end){
		if (son + 1 <= end && arr[son] < arr[son + 1]) { //让son指向较大的孩子
			son += 1;
		}
		if (arr[dad] > arr[son])
			return;
		else {             //如果父节点比孩子要小,那么把父节点换下来
			swap(arr[dad], arr[son]);
			dad = son;
			son = dad * 2 + 1;
		}
	}
}
/* 堆排序函数 */
void heap_sort(int arr[], int len)
{
	//从最后一个父节点开始 把数组初始化成一个最大堆		--> 为什么i=len/2-1呢???
	for (int i = len / 2 - 1; i >= 0; i--)
	{
		max_heapify(arr, i, len - 1);
	}
	//不断地把根节点拿到最后一个位置,然后把最后位置的元素排除再把无序区调成最大堆
	for (int i = len - 1; i > 0; i--)
	{
		swap(arr[0], arr[i]);
		max_heapify(arr, 0, i - 1);
	}
}
